/*
 * Copyright (c) 2013 Linaro Limited
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the BSD License which accompanies
 * this distribution, and is available at
 * http://opensource.org/licenses/bsd-license.php
 *
 * Contributors:
 *     Yi Li - yi.li@linaro.org
*/

#include <IndustryStandard/Acpi.h>
#include <Platform.h>


#define ACPI_5_0_UEFI_REVISION 0x1

#pragma pack(1)

typedef struct
{
    EFI_ACPI_DESCRIPTION_HEADER Header;
    EFI_GUID  guid;    
    UINT16    usDataOffset;
}EFI_ACPI_5_0_UEFI_TABLE;
#pragma pack()

EFI_ACPI_5_0_UEFI_TABLE Uefi=
{
  {
      EFI_ACPI_5_0_UEFI_ACPI_DATA_TABLE_SIGNATURE,
      sizeof (EFI_ACPI_5_0_UEFI_TABLE),
      ACPI_5_0_UEFI_REVISION,
      0x00,                                                // Checksum will be updated at runtime
      {EFI_ACPI_OEM_ID},
      EFI_ACPI_OEM_TABLE_ID,
      EFI_ACPI_OEM_REVISION,
      EFI_ACPI_CREATOR_ID,
      EFI_ACPI_CREATOR_REVISION
    },
    //03020100-0504-0706-0809-0A0B0C0D0E0F
    { 0x03020100, 0x0504, 0x0706, { 0x08, 0x09, 0x0A, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f } },
      0x0036                                              //Data Offset
};

VOID*
ReferenceAcpiTable (
  VOID
  )
{
  //
  // Reference the table being generated to prevent the optimizer from removing the
  // data structure from the exeutable
  //
  return (VOID*)&Uefi;
}
